[{"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\index.js":"1","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\App.js":"3","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\products.js":"7","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Product.js":"8","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\store.js":"11","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\reducers\\productReducers.js":"12","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\actions\\productActions.js":"14","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Message.js":"16","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\screens\\CartScreen.js":"17","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\reducers\\cartReducers.js":"18","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\actions\\cartActions.js":"20"},{"size":614,"mtime":1618336280633,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":726,"mtime":1618419236584,"results":"24","hashOfConfig":"22"},{"size":329,"mtime":1617937327741,"results":"25","hashOfConfig":"22"},{"size":1005,"mtime":1618794609453,"results":"26","hashOfConfig":"22"},{"size":1315,"mtime":1618506014899,"results":"27","hashOfConfig":"22"},{"size":2607,"mtime":1618258388711,"results":"28","hashOfConfig":"22"},{"size":1040,"mtime":1618257489135,"results":"29","hashOfConfig":"22"},{"size":2043,"mtime":1618190121332,"results":"30","hashOfConfig":"22"},{"size":5408,"mtime":1618421409564,"results":"31","hashOfConfig":"22"},{"size":934,"mtime":1618422199061,"results":"32","hashOfConfig":"22"},{"size":1122,"mtime":1618352538549,"results":"33","hashOfConfig":"22"},{"size":366,"mtime":1618352258461,"results":"34","hashOfConfig":"22"},{"size":1364,"mtime":1618417452580,"results":"35","hashOfConfig":"22"},{"size":476,"mtime":1618351596594,"results":"36","hashOfConfig":"22"},{"size":239,"mtime":1618505339249,"results":"37","hashOfConfig":"22"},{"size":5155,"mtime":1618593979885,"results":"38","hashOfConfig":"22"},{"size":1310,"mtime":1618594117502,"results":"39","hashOfConfig":"22"},{"size":96,"mtime":1618421324910,"results":"40","hashOfConfig":"22"},{"size":1009,"mtime":1618593910034,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ixfpno",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\index.js",[],["88","89"],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\App.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Header.js",["90"],"import React from 'react'\r\nimport { Navbar, Nav, Container, Row} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand href=\"/\">864 Shop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/login\">\r\n                <Nav.Link><i className=\"fas fa-user\"></i>Login </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\screens\\HomeScreen.js",["91"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n// IMPORT ACTION TO SHOW THE LIST OF DATA\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction HomeScreen() {\r\n    // BOILER PLATE: MUST HAVE THE DISPATCH AND SELECTOR\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n\r\n    const { error, loading, products } = productList\r\n\r\n// WE DISPATCH OUR ACTION TO SHOW THE EFFECT OF THE STATE\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                : \r\n                <Row>\r\n                {products.map(product => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product} />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\products.js",[],["92","93"],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\screens\\ProductScreen.js",["94"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Card, Button, Image, Form } from 'react-bootstrap'\r\n\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    // STATE FOR INSTOCK QUANTITY\r\n    const [qty, setQty] = useState(1)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match])\r\n\r\n// history is a built in props destructor just like match. It redirects you to cart page. \r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className=\"btn btn-light\">Go Back</Link>\r\n                {loading ?\r\n                    <Loader/>\r\n                    : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <strong>Price:</strong>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${product.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n\r\n                                        Status:\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {/* CREATE THE INSTOCK OPTION */}\r\n\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Qty</Col>\r\n                                        <Col xs='auto' className=\"my-1\">\r\n                                            <Form.Control\r\n                                            as=\"select\"\r\n                                            value={qty}\r\n                                            onChange={(e) => setQty(e.target.value)}\r\n                                            >\r\n                                               {\r\n                                                   [...Array(product.countInStock).keys()].map((x) =>(\r\n                                                       <option key={x + 1} value={x + 1}>\r\n                                                           {x + 1}\r\n                                                       </option>\r\n                                                   ))\r\n                                               } \r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    onClick={addToCartHandler}  \r\n                                    className=\"btn-block\" \r\n                                    disabled={product.countInStock == 0}\r\n                                    type='button'>\r\n                                    ADD TO CART\r\n                                    </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n                    )\r\n                }\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\store.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\screens\\CartScreen.js",["95"],"import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport  Message  from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n// match and location get the data from the url\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n// useSelector lets you use the state name that you called it in the rudcer function in store.js\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const { cartItems } = cart\r\n    \r\n\r\n// dispatch tells the fires the function I created in my actions.js.It takes the 2 args that we created in actions as well.\r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n{/* check to see if there are items in the cart. if not, then tell the user the cart is empty with a message */}\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length == 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                    <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                               {\r\n                                                   [...Array(item.countInStock).keys()].map((x) =>(\r\n                                                       <option key={x + 1} value={x + 1}>\r\n                                                           {x + 1}\r\n                                                       </option>\r\n                                                   ))\r\n                                               } \r\n                                            </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n{/* Getting the total price of the pruducts that have been added to cartitems. */}\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'> \r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Poceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Freddy\\Documents\\Code\\ecom\\frontend\\src\\actions\\cartActions.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":34,"nodeType":"102","messageId":"103","endLine":2,"endColumn":37},{"ruleId":"100","severity":1,"message":"104","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"96","replacedBy":"105"},{"ruleId":"98","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":121,"column":68,"nodeType":"109","messageId":"110","endLine":121,"endColumn":70},{"ruleId":"107","severity":1,"message":"108","line":42,"column":35,"nodeType":"109","messageId":"110","endLine":42,"endColumn":37},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["111"],["112"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]