{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      // check if product exist. (payload is the product data. x.product and item.product is the product._id)\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product); // Replace the matching item with the new item which is existItem\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Freddy/Documents/Code/ecom/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;AAKA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAAT,EAA2BC,MAA3B,KAAsC;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACI;AACA,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB,CAHJ,CAII;;AACA,UAAGH,SAAH,EAAa;AACT,eAAM,EACF,GAAGN,KADD;AAEFC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAC5BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADlC;AAFT,SAAN;AAMH,OAPD,MAOK;AACD,eAAM,EACF,GAAGR,KADD;AAEFC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFT,SAAN;AAIH;;AAEL;AACI,aAAOJ,KAAP;AArBR;AAuBH,CAxBM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\n\r\n\r\n\r\nexport const cartReducer = (state = {cartItems: [] }, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            // check if product exist. (payload is the product data. x.product and item.product is the product._id)\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            // Replace the matching item with the new item which is existItem\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => \r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}