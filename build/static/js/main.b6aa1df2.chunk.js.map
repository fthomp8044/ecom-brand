{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","item","existItem","find","x","map","filter","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","classname","Rating","value","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","name","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","HomeScreen","dispatch","useDispatch","useSelector","useEffect","a","axios","get","data","response","message","sm","md","lg","xl","ProductScreen","match","history","useState","qty","setQty","params","Image","alt","fluid","ListGroup","Item","description","countInStock","xs","Form","Control","onChange","e","target","Array","keys","Button","onClick","push","disabled","addToCart","getState","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6aa1df2.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\n// combineRuducers combine all reducers so we can add it to the store\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n})\r\n\r\n// pull data from localstorage in cartActions.\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS, \r\n    PRODUCT_DETAILS_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = ( state = { products: [] }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true, products:[]}\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading:false, products: action.payload }\r\n\r\n         case PRODUCT_LIST_FAIL:\r\n            return {loading:false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = ( state = { product: {reviews :[]} }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true, ...state}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false, product: action.payload }\r\n\r\n         case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false, error: action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer = (state = {cartItems: [] }, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM:\r\n            // check if product exist. (payload is the product data. x.product and item.product is the product._id)\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            // Replace the matching item with the new item which is existItem\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => \r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n// filter out the items in cartItems. The action.payload is the id of the product I want to remove. Filter keeps the products that match the id\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport { Navbar, Nav, Container, Row} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand href=\"/\">864 Shop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/login\">\r\n                <Nav.Link><i className=\"fas fa-user\"></i>Login </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col classname=\"text-center py-3\">Copyright &copy; Proshop</Col>\r\n        </Row>\r\n      </Container>\r\n      </footer>\r\n  )\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\n// destructur props\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                    \r\n                </i>\r\n            </span>            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                    \r\n                </i>\r\n            </span>            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                    \r\n                </i>\r\n            </span>            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                    \r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link }from 'react-router-dom'\r\n\r\n// destructure way so we dont need to put props.\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as='div'>\r\n                    <strong>{product.name}</strong>\r\n                </Card.Title>\r\n            </Link>\r\n            <Card.Text as=\"div\">\r\n                <div className='my-3'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                </div>\r\n            </Card.Text>\r\n\r\n            <Card.Text as='h3'>\r\n                ${product.price}\r\n            </Card.Text>\r\n\r\n            </Card.Body>\r\n        </Card >\r\n    )\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height:'100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\nexport default Message;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n// IMPORT ACTION TO SHOW THE LIST OF DATA\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction HomeScreen() {\r\n    // BOILER PLATE: MUST HAVE THE DISPATCH AND SELECTOR\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n\r\n    const { error, loading, products } = productList\r\n\r\n// WE DISPATCH OUR ACTION TO SHOW THE EFFECT OF THE STATE\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                : \r\n                <Row>\r\n                {products.map(product => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product} />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;\r\n","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,  } from '../constants/productConstants'\r\nimport axios from 'axios'\r\n// replacing the api call we made in the home screen\r\n//dispatch are the imports on line 1\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/products/')\r\n\r\n        dispatch({\r\n            type:PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n           type:PRODUCT_LIST_FAIL,\r\n           payload: error.response && error.response.data.message\r\n           ? error.response.data.message\r\n           : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n           type:PRODUCT_DETAILS_FAIL,\r\n           payload: error.response && error.response.data.message\r\n           ? error.response.data.message\r\n           : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Card, Button, Image, Form } from 'react-bootstrap'\r\n\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    // STATE FOR INSTOCK QUANTITY\r\n    const [qty, setQty] = useState(1)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match])\r\n\r\n// history is a built in props destructor just like match. It redirects you to cart page. \r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className=\"btn btn-light\">Go Back</Link>\r\n                {loading ?\r\n                    <Loader/>\r\n                    : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <strong>Price:</strong>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        ${product.price}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n\r\n                                        Status:\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {/* CREATE THE INSTOCK OPTION */}\r\n\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Qty</Col>\r\n                                        <Col xs='auto' className=\"my-1\">\r\n                                            <Form.Control\r\n                                            as=\"select\"\r\n                                            value={qty}\r\n                                            onChange={(e) => setQty(e.target.value)}\r\n                                            >\r\n                                               {\r\n                                                   [...Array(product.countInStock).keys()].map((x) =>(\r\n                                                       <option key={x + 1} value={x + 1}>\r\n                                                           {x + 1}\r\n                                                       </option>\r\n                                                   ))\r\n                                               } \r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    onClick={addToCartHandler}  \r\n                                    className=\"btn-block\" \r\n                                    disabled={product.countInStock == 0}\r\n                                    type='button'>\r\n                                    ADD TO CART\r\n                                    </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n                    )\r\n                }\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\n// getState is like useState \r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n// this dispatch removes the item we have in payload that matches id.\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    \r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload:id,\r\n    })\r\n// updating the localstorage with the deleted product taken off\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport  Message  from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n// match and location get the data from the url\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n// useSelector lets you use the state name that you called it in the rudcer function in store.js\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const { cartItems } = cart\r\n    \r\n\r\n// dispatch tells the fires the function I created in my actions.js.It takes the 2 args that we created in actions as well.\r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n{/* check to see if there are items in the cart. if not, then tell the user the cart is empty with a message */}\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length == 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                    <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                               {\r\n                                                   [...Array(item.countInStock).keys()].map((x) =>(\r\n                                                       <option key={x + 1} value={x + 1}>\r\n                                                           {x + 1}\r\n                                                       </option>\r\n                                                   ))\r\n                                               } \r\n                                            </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n{/* Getting the total price of the pruducts that have been added to cartitems. */}\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'> \r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Poceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import { Container } from 'react-bootstrap'\nimport { BrowserRouter as Routes, Route} from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\n\n\nfunction App() {\n  return (\n    <Routes>\n      <Header />\n      <main classname=\"py-3\">\n        <Container>\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\n//bootstrap files\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}